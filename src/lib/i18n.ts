import { createContext, useContext } from 'react';

// Translation dictionaries
const translations = {
  en: {
    createBudget: "Create Budget",
    submit: "Submit",
    welcome: "Welcome",
    budget: "Budget",
    expenses: "Expenses",
    categories: "Categories",
    amount: "Amount",
    description: "Description",
    date: "Date",
    type: "Type",
    expense: "Expense",
    income: "Income",
    addTransaction: "Add Transaction",
    transactionHistory: "Transaction History",
    availableToSpend: "Available to Spend",
    totalBudgeted: "Total Budgeted",
    totalSpent: "Total Spent",
    remaining: "Remaining",
    settings: "Settings",
    signOut: "Sign Out",
    history: "History",
    welcomeBack: "Welcome back",
    welcomeNew: "Welcome",
    dailySpending: "Daily Spending",
    budgetSummary: "Budget Summary",
    quickAdd: "Quick Add",
    category: "Category",
    selectCategory: "Select a category",
    resetBudget: "Reset Budget",
    createNewBudget: "Create New Budget",
    totalIncome: "Total Income",
    totalExpenses: "Total Expenses",
    balance: "Balance",
    thisMonth: "This Month",
    today: "Today",
    yesterday: "Yesterday",
    weekAgo: "A week ago",
    monthAgo: "A month ago",
    budgetSetup: "Budget Setup",
    createBudgetSections: "Create budget sections and categories to track your spending",
    budgeted: "Budgeted",
    availableToBudget: "Available to Budget",
    noBudgetSections: "No budget sections yet. Add one to get started.",
    addBudgetSection: "Add Budget Section",
    resetMonth: "Reset Month",
    aiMagic: "AI Magic",
    aiDescription: "Just describe your day in plain English and watch AI transform it into perfect budget entries",
    aiExample: "Example: coffee 5, lunch 15, gas 40, salary 2000",
    charactersRemaining: "characters",
    noCategoriesAvailable: "No categories available",
    setupRequired: "Setup Required",
    setupRequiredMessage: "You need to create budget categories first. Go to Budget Setup to add categories.",
    tryExamples: "Try these examples:",
    coffeeExample: "coffee 5, lunch 15",
    rentExample: "rent 500, gas 40",
    salaryExample: "salary 2000, freelance 500",
    trackDailyExpenses: "Track your daily income and expenses",
    whatWasThisFor: "What was this transaction for?",
    overviewBudgetCategories: "Overview of your budget and top spending categories",
    addBudgetCategoriesToSee: "Add some budget categories to see a summary",
    excel: "Excel",
    aiQuickInput: "AI Quick Input",
    selectACategory: "Select a category",
    yourFreeTrialEnds: "Your free trial ends in",
    days: "days",
    noTransactionsYet: "No transactions yet. Add one to get started.",
    upgradeNow: "Upgrade Now",
  },
  es: {
    createBudget: "Crear Presupuesto",
    submit: "Enviar",
    welcome: "Bienvenido",
    budget: "Presupuesto",
    expenses: "Gastos",
    categories: "Categorías",
    amount: "Cantidad",
    description: "Descripción",
    date: "Fecha",
    type: "Tipo",
    expense: "Gasto",
    income: "Ingreso",
    addTransaction: "Agregar Transacción",
    transactionHistory: "Historial de Transacciones",
    availableToSpend: "Disponible para Gastar",
    totalBudgeted: "Total Presupuestado",
    totalSpent: "Total Gastado",
    remaining: "Restante",
    settings: "Configuración",
    signOut: "Cerrar Sesión",
    history: "Historial",
    welcomeBack: "Bienvenido de nuevo",
    welcomeNew: "Bienvenido",
    dailySpending: "Gasto Diario",
    budgetSummary: "Resumen del Presupuesto",
    quickAdd: "Agregar Rápido",
    category: "Categoría",
    selectCategory: "Seleccionar una categoría",
    resetBudget: "Restablecer Presupuesto",
    createNewBudget: "Crear Nuevo Presupuesto",
    totalIncome: "Ingresos Totales",
    totalExpenses: "Gastos Totales",
    balance: "Balance",
    thisMonth: "Este Mes",
    today: "Hoy",
    yesterday: "Ayer",
    weekAgo: "Hace una semana",
    monthAgo: "Hace un mes",
    budgetSetup: "Configuración del Presupuesto",
    createBudgetSections: "Crear secciones de presupuesto y categorías para rastrear tus gastos",
    budgeted: "Presupuestado",
    availableToBudget: "Disponible para Presupuestar",
    noBudgetSections: "Aún no hay secciones de presupuesto. Agrega una para comenzar.",
    addBudgetSection: "Agregar Sección de Presupuesto",
    resetMonth: "Restablecer Mes",
    aiMagic: "Magia IA",
    aiDescription: "Solo describe tu día en español simple y mira como la IA lo transforma en entradas perfectas de presupuesto",
    aiExample: "Ejemplo: café 5, almuerzo 15, gasolina 40, salario 2000",
    charactersRemaining: "caracteres",
    noCategoriesAvailable: "No hay categorías disponibles",
    setupRequired: "Configuración Requerida",
    setupRequiredMessage: "Necesitas crear categorías de presupuesto primero. Ve a Configuración del Presupuesto para agregar categorías.",
    tryExamples: "Prueba estos ejemplos:",
    coffeeExample: "café 5, almuerzo 15",
    rentExample: "renta 500, gasolina 40",
    salaryExample: "salario 2000, freelance 500",
    trackDailyExpenses: "Rastrea tus ingresos y gastos diarios",
    whatWasThisFor: "¿Para qué fue esta transacción?",
    overviewBudgetCategories: "Resumen de tu presupuesto y principales categorías de gasto",
    addBudgetCategoriesToSee: "Agrega algunas categorías de presupuesto para ver un resumen",
    excel: "Excel",
    aiQuickInput: "Entrada Rápida IA",
    selectACategory: "Seleccionar una categoría",
    yourFreeTrialEnds: "Tu prueba gratuita termina en",
    days: "días",
    noTransactionsYet: "Aún no hay transacciones. Agrega una para comenzar.",
    upgradeNow: "Actualizar Ahora",
  },
};

export type Locale = 'en' | 'es';
export type TranslationKey = keyof typeof translations.en;

// Context for current locale - Changed to Spanish as default
export const LocaleContext = createContext<Locale>('es');

// Hook to get current locale
export const useLocale = () => useContext(LocaleContext);

// Hook to get translation function
export const useTranslation = () => {
  const locale = useLocale();
  
  const t = (key: TranslationKey): string => {
    return translations[locale][key] || translations.en[key] || key;
  };
  
  return { t };
};

// Get translations for a specific locale
export const getTranslations = (locale: Locale) => translations[locale] || translations.en; 